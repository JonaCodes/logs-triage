// Sudden Errors, Check Recent Changes; agent should check recent changes and alert team indicating that the most recent deployment might be the cause
export const LOGS = [
    { "time": "17:16:12", "service": "api-gateway", "level": "INFO", "msg": "Recommendations: feature flag evaluated - off" },
    { "time": "17:16:24", "service": "api-gateway", "level": "INFO", "msg": "Health check OK" },
    { "time": "17:16:36", "service": "api-gateway", "level": "INFO", "msg": "Recommendations: cache warm" },
    { "time": "17:16:48", "service": "recommendations-service", "level": "INFO", "msg": "Recommendations: preloading popularity vectors" },
    { "time": "17:17:00", "service": "auth-service", "level": "INFO", "msg": "Recommendations: preloading popularity vectors" },
    { "time": "17:17:12", "service": "recommendations-service", "level": "INFO", "msg": "Shipping quote calculated" },
    { "time": "17:17:24", "service": "order-service", "level": "INFO", "msg": "Order created" },
    { "time": "17:17:36", "service": "database-service", "level": "INFO", "msg": "Database query completed" },
    { "time": "17:17:48", "service": "payment-service", "level": "INFO", "msg": "User login successful" },
    { "time": "17:18:00", "service": "api-gateway", "level": "INFO", "msg": "Request processed" },
    { "time": "17:18:12", "service": "order-service", "level": "INFO", "msg": "Recommendations: feature flag evaluated - off" },
    { "time": "17:18:24", "service": "auth-service", "level": "INFO", "msg": "Recommendations: cache warm" },
    { "time": "17:18:36", "service": "database-service", "level": "INFO", "msg": "Recommendations: preloading popularity vectors" },
    { "time": "17:18:48", "service": "payment-service", "level": "INFO", "msg": "Product page viewed" },
    { "time": "17:19:00", "service": "order-service", "level": "INFO", "msg": "Latency within SLA" },
    { "time": "17:19:12", "service": "payment-service", "level": "INFO", "msg": "Shipping quote calculated" },
    { "time": "17:19:24", "service": "payment-service", "level": "INFO", "msg": "Order created" },
    { "time": "17:19:36", "service": "order-service", "level": "INFO", "msg": "Request processed" },
    { "time": "17:30:01", "service": "payment-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:30:10", "service": "payment-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:30:19", "service": "recommendations-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:30:28", "service": "auth-service", "level": "ERROR", "msg": "Database connection pool exhausted - all connections in use" },
    { "time": "17:30:37", "service": "payment-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:30:46", "service": "recommendations-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:30:55", "service": "auth-service", "level": "ERROR", "msg": "Database connection pool exhausted - all connections in use" },
    { "time": "17:31:04", "service": "recommendations-service", "level": "ERROR", "msg": "Query execution failed for recommendations_cache table - no available connections" },
    { "time": "17:31:13", "service": "recommendations-service", "level": "ERROR", "msg": "Service degraded - database pool size: 50/50 in use" },
    { "time": "17:31:22", "service": "order-service", "level": "INFO", "msg": "Falling back to cached recommendations" },
    { "time": "17:31:31", "service": "recommendations-service", "level": "ERROR", "msg": "Service degraded - database pool size: 50/50 in use" },
    { "time": "17:31:40", "service": "recommendations-service", "level": "ERROR", "msg": "Query execution failed for recommendations_cache table - no available connections" },
    { "time": "17:31:49", "service": "payment-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:34:49", "service": "recommendations-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:34:58", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:35:07", "service": "recommendations-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:35:16", "service": "order-service", "level": "ERROR", "msg": "Database connection pool exhausted - all connections in use" },
    { "time": "17:35:25", "service": "order-service", "level": "ERROR", "msg": "Query execution failed for recommendations_cache table - no available connections" },
    { "time": "17:35:34", "service": "database-service", "level": "INFO", "msg": "Falling back to cached recommendations" },
    { "time": "17:35:43", "service": "recommendations-service", "level": "ERROR", "msg": "Query execution failed for recommendations_cache table - no available connections" },
    { "time": "17:35:52", "service": "auth-service", "level": "ERROR", "msg": "Database connection pool exhausted - all connections in use" },
    { "time": "17:36:01", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:36:10", "service": "database-service", "level": "INFO", "msg": "Circuit open check passed" },
    { "time": "17:36:19", "service": "database-service", "level": "INFO", "msg": "Background job heartbeat" },
    { "time": "17:36:28", "service": "auth-service", "level": "INFO", "msg": "Health check OK" },
    { "time": "17:36:37", "service": "recommendations-service", "level": "ERROR", "msg": "Database connection pool exhausted - all connections in use" },
    { "time": "17:36:46", "service": "recommendations-service", "level": "ERROR", "msg": "Service degraded - database pool size: 50/50 in use" },
    { "time": "17:36:55", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Error fetching product similarity data - connection timeout" },
    { "time": "17:37:04", "service": "auth-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:37:13", "service": "database-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:37:22", "service": "payment-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:37:31", "service": "recommendations-service", "level": "ERROR", "msg": "Query execution failed for recommendations_cache table - no available connections" },
    { "time": "17:37:40", "service": "api-gateway", "level": "INFO", "msg": "Request accepted" },
    { "time": "17:37:49", "service": "order-service", "level": "ERROR", "msg": "Service degraded - database pool size: 50/50 in use" },
    { "time": "17:37:58", "service": "order-service", "level": "ERROR", "msg": "Failed to acquire database connection - timeout after 5000ms" },
    { "time": "17:38:07", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:38:16", "service": "payment-service", "level": "ERROR", "msg": "Service degraded - database pool size: 50/50 in use" },
    { "time": "17:38:25", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:38:34", "service": "recommendations-service", "level": "ERROR", "msg": "Recommendations service: Failed to load user preferences - database query timeout" },
    { "time": "17:38:43", "service": "order-service", "level": "INFO", "msg": "Circuit open check passed" },
    { "time": "17:38:52", "service": "database-service", "level": "INFO", "msg": "Request accepted" },
]

// Agent should pick up that this change caused the errors
export const RECENT_CHANGES = [
    {
        "timestamp": "17:29:52", 
        "type": "deployment", 
        "description": "New recommendations feature",
        "filesAffected": ["recommendations-service/src/recommendations/feature-flag.ts", "recommendations-service/src/recommendations/index.ts"]
    },
]